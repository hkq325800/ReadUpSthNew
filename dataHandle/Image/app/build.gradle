apply plugin: 'com.android.application'

android {
    compileSdkVersion 17
    buildToolsVersion "24.0.0 rc2"

    defaultConfig {
        applicationId "com.myc"
        minSdkVersion 10
        targetSdkVersion 10
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_5
            targetCompatibility JavaVersion.VERSION_1_5
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
//    sourceSets.main.jni.srcDirs = []
//    //禁止自带的ndk功能
//    sourceSets.main.jniLibs.srcDirs = ['src/main/libs','src/main/jniLibs']
//    //重定向so目录为src/main/libs和src/main/jniLibs，原来为src/main/jniLibs
//
//    task ndkBuild(type: Exec, description: 'Compile JNI source with NDK') {
//        Properties properties = new Properties()
//        properties.load(project.rootProject.file('local.properties').newDataInputStream())
//        def ndkDir = properties.getProperty('ndk.dir')
//
//        if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS)) {
//            commandLine "$ndkDir/ndk-build.cmd", '-C', file('src/main/jni').absolutePath
//        } else {
//            commandLine "$ndkDir/ndk-build", '-C', file('src/main/jni').absolutePath
//        }
//    }
//
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn ndkBuild
//    }
//
//    task ndkClean(type: Exec, description: 'Clean NDK Binaries') {
//        Properties properties = new Properties()
//        properties.load(project.rootProject.file('local.properties').newDataInputStream())
//        def ndkDir = properties.getProperty('ndk.dir')
//
//        if (org.apache.tools.ant.taskdefs.condition.Os.isFamily(org.apache.tools.ant.taskdefs.condition.Os.FAMILY_WINDOWS)) {
//            commandLine "$ndkDir/ndk-build.cmd",'clean', '-C', file('src/main/jni').absolutePath
//        } else {
//            commandLine "$ndkDir/ndk-build",'clean', '-C', file('src/main/jni').absolutePath
//        }
//    }
//
//    clean.dependsOn 'ndkClean'
}
